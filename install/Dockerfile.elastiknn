FROM ann-benchmarks

WORKDIR /home/app

# Install elasticsearch.
ENV DEBIAN_FRONTEND noninteractive
RUN apt install -y wget curl htop
RUN wget --quiet https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-7.4.0-amd64.deb \
    && dpkg -i elasticsearch-oss-7.4.0-amd64.deb \
    && rm elasticsearch-oss-7.4.0-amd64.deb

# Put ES on the path.
ENV PATH="/usr/share/elasticsearch/bin:$PATH"

# Add configurations optimized for benchmarking. Setting write and search thread pools to size 1 to negate overhead from
# switching/managing threads. This leads to some very minor performance improvements.
RUN echo "thread_pool.search.size: 1" >> /etc/elasticsearch/elasticsearch.yml
RUN echo "thread_pool.write.size: 1" >> /etc/elasticsearch/elasticsearch.yml
RUN echo "ES_JAVA_OPTS=\"-Xms200m -Xmx800m\"" >> /etc/default/elasticsearch

# Settings for JMX/VisualVM profiling. You also have to map the port when running the container.
RUN echo "-Dcom.sun.management.jmxremote.ssl=false"          >> /etc/elasticsearch/jvm.options
RUN echo "-Dcom.sun.management.jmxremote.authenticate=false" >> /etc/elasticsearch/jvm.options
RUN echo "-Dcom.sun.management.jmxremote.local.only=false"   >> /etc/elasticsearch/jvm.options
RUN echo "-Dcom.sun.management.jmxremote.port=8099"          >> /etc/elasticsearch/jvm.options
RUN echo "-Dcom.sun.management.jmxremote.rmi.port=8099"      >> /etc/elasticsearch/jvm.options
RUN echo "-Djava.rmi.server.hostname=localhost"              >> /etc/elasticsearch/jvm.options
EXPOSE 8099

# Install plugin.
RUN elasticsearch-plugin install https://github.com/alexklibisz/elastiknn/releases/download/0.1.0-PRE6/elastiknn-0.1.0-PRE6_es7.4.0.zip

# Install python client.
RUN python3 -m pip install --upgrade elastiknn-client==0.1.0rc4
